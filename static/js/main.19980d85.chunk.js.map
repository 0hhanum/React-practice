{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","id","Movie","year","title","summary","poster","genres","to","pathname","state","className","src","alt","slice","map","genre","index","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","props","location","history","undefined","push","class","Navigation","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAOeA,MALf,WACI,OAAO,qBAAKC,GAAG,OAAR,SACH,qD,wECsCOC,MAtCf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,cAAC,IAAD,CAAMC,GAAI,CACNC,SAAU,gBACVC,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,WAPR,SAUI,sBAAKI,UAAU,QAAf,UACI,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKO,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BP,IAC9B,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAGQ,UAAU,iBAAb,UAA+BN,EAAQS,MAAM,EAAG,KAAhD,SACA,oBAAIH,UAAU,gBAAd,SACKJ,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OACR,qBAAgBN,UAAU,gBAA1B,eAA6CK,EAA7C,MAASC,iBCoCtBC,G,kNArDXR,MAAQ,CACJS,WAAW,EACXC,OAAQ,I,EAcZC,U,sBAAY,8BAAAC,EAAA,sEACqCC,IAAMC,IAAI,6CAD/C,gBACgBJ,EADhB,EACAK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAF3B,2C,uDAIZ,WACIQ,KAAKN,c,oBAET,WACI,MAA8BM,KAAKjB,MAA3BU,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,UAChB,OAEI,aADA,CACA,WAASR,UAAU,YAAnB,SACKQ,EACK,qBAAKR,UAAU,SAASV,GAAG,SAA3B,SACE,sBAAMU,UAAU,eAAhB,uBAGA,qBAAKA,UAAU,SAASV,GAAG,SAA3B,SAEQmB,EAAOL,KAAI,SAAAa,GAAK,OACZ,cAAE,EAAF,CAEI3B,GAAI2B,EAAM3B,GACVE,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM3B,e,GAtChC6B,IAAMC,YCuBVC,G,6KApBX,WACI,MAA8BL,KAAKM,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACKC,IAAnBF,EAASxB,OACTyB,EAAQE,KAAK,O,oBAIrB,WACI,IAAQH,EAAaP,KAAKM,MAAlBC,SACR,OAAIA,EAASxB,MACF,sBAAK4B,MAAM,SAAX,UACH,6BAAKJ,EAASxB,MAAMN,QACpB,+BAAO8B,EAASxB,MAAML,aAInB,S,GAjBEyB,IAAMC,Y,MCIZQ,MARf,WAEI,OAAO,sBAAK5B,UAAU,MAAf,UACH,cAAC,IAAD,CAAMH,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCwCOgC,MATf,WAEE,OAAO,eAAC,IAAD,WACL,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWxB,EAAMyB,OAAO,IACxC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAW1C,IAChC,cAAC,IAAD,CAAOyC,KAAK,gBAAgBC,UAAWV,QCzC3CY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.19980d85.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About() {\n    return <div id=\"copy\" >\n        <span>&copy; H A N U M</span>\n    </div >\n};\nexport default About;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Movie({ year, title, summary, poster, genres }) {\n    return (\n        <Link to={{\n            pathname: \"/movie-detail\",\n            state: {\n                year,\n                title,\n                summary,\n                poster,\n                genres\n            }\n        }}>\n            <div className=\"movie\">\n                <img src={poster} alt={title} title={title}></img>\n                <div className=\"movie__data\">\n                    <h3 className=\"movie__title\">{title}</h3>\n                    <h3 className=\"movie__year\">{year}</h3>\n                    <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\n                    <ul className=\"movie__genres\">\n                        {genres.map((genre, index) =>\n                            <li key={index} className=\"genres__genre\">  {genre} </li>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\n\nclass Home extends React.Component {\n    state = {\n        isLoading: true,\n        movies: []\n    };\n    /*\n    add = () => {\n      // this.setState({ count: this.state.count + 1 })\n      this.setState(current => ({ count: current.count + 1 }))\n      // setState 호출 => react 는 새로운 state 와 함께 render 를 다시 진행\n    };\n    minus = () => {\n      // this.setState({ count: this.state.count - 1 })\n      this.setState(current => ({ count: current.count - 1 }))\n    };\n    */\n\n    getMovies = async () => {\n        const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n        this.setState({ movies, isLoading: false });\n    };\n    componentDidMount() {\n        this.getMovies();\n    };\n    render() {\n        const { movies, isLoading } = this.state;\n        return (\n            // class 로 하면 리액트가 js 의 Class 와 혼동하니 className 부여\n            <section className=\"container\">\n                {isLoading\n                    ? <div className=\"loader\" id=\"loader\">\n                        <span className=\"loader__text\">LOADING</span>\n                    </div>\n                    : (\n                        <div className=\"movies\" id=\"movies\">\n                            {\n                                movies.map(movie => (\n                                    < Movie\n                                        key={movie.id}\n                                        id={movie.id}\n                                        year={movie.year}\n                                        title={movie.title}\n                                        summary={movie.summary}\n                                        poster={movie.medium_cover_image}\n                                        genres={movie.genres} />\n                                ))}\n                        </div>\n                    )\n                }\n            </section>\n        );\n    };\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./Detail.css\";\n\n// function Detail({ location: { state } }) {\n//     console.log(state);\n//     return <h1>Hello</h1>;\n// };\n\nclass Detail extends React.Component {\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n            // redirect 시키기\n        }\n    }\n    render() {\n        const { location } = this.props;\n        if (location.state) {\n            return <div class=\"detail\">\n                <h1>{location.state.title}</h1>\n                <span>{location.state.summary}</span>\n            </div>\n                ;\n        } else {\n            return null;\n        }\n    }\n}\nexport default Detail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n    // Link 는 router 내에서만 사용가능 (App.js 에서 호출시 router 내에 존재)\n    return <div className=\"nav\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/about\">About</Link>\n    </div>\n}\n\nexport default Navigation","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\n\n\n// component 는 대문자로 시작해야함. 규칙\n// const Test = ({ name, age }) => {\n//   return (\n//     <div>\n//       <h1> {name}  </h1>\n//       <h3> {age} </h3>\n//     </div>\n//   );\n// };\n\n// Test.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   age: PropTypes.number.isRequired,\n// };\n\n// const list = [\n//   { id: 1, \"name\": \"a\", \"age\": 20 },\n//   { id: 2, \"name\": \"b\", \"age\": 26 },\n//   { id: 3, \"name\": \"c\", \"age\": 22 },\n// ]\n\n// function component\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       {list.map(element => <Test key={element.id} name={element.name} age={element.age} />)}\n//     </div>\n//   );\n// };\n/* react 내에서 모든 element 는 달라야함. 이를 구분하기 위해 key 값을 넣어줌. */\n\nfunction App() {\n  // exact 쓰는 이유 => /about 일때는 / 까지 같이 render 해버림\n  return <HashRouter>\n    <Navigation />\n    <Route path=\"/\" component={Home} exact={true} />\n    <Route path=\"/about\" component={About} />\n    <Route path=\"/movie-detail\" component={Detail} />\n  </HashRouter>\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n/*\n 1. jsx => 위와 같이 js 와 react 를 혼합해 사용하는 react 내의 개념\n App 과 같은 형태를 react 에서 component 라 칭함.\n 즉, jsx 는 js 만의 HTML, component 를 만들고 어떻게 사용하는지에 대한 것.\n\n 2. jsx 에서 component 는 정보를 담아 보낼 수 있다.\n */\n\n\n"],"sourceRoot":""}